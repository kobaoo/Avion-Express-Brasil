services:
  db:
    image: postgres:15
    container_name: olist-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d:ro
      - ./data:/data:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres -h 127.0.0.1"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: olist-api
    depends_on:
      db:
        condition: service_healthy
    environment:
      PGHOST: db
      PGPORT: "5432"
      PGDATABASE: postgres
      PGUSER: postgres
      PGPASSWORD: postgres
      PGSCHEMA: olist
    ports:
      - "8000:8000"

  superset:
    build:
      context: .
      dockerfile: Dockerfile.superset
    image: my-superset:pg
    container_name: olist-superset
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      SUPERSET_SECRET_KEY: "change_me_to_a_long_random_string_please"
      SUPERSET__SQLALCHEMY_DATABASE_URI: "postgresql+psycopg2://postgres:postgres@db:5432/postgres"
      ADMIN_USERNAME: admin
      ADMIN_FIRST_NAME: Superset
      ADMIN_LAST_NAME: Admin
      ADMIN_EMAIL: admin@example.com
      ADMIN_PASSWORD: superset
      SUPERSET_FEATURE_FLAGS: '{"SQLLAB_BACKEND_PERSISTENCE": true}'
    volumes:
      - superset_home:/app/superset_home
    ports:
      - "8088:8088"
    command:
      - /bin/bash
      - -c
      - |
        set -e
        superset db upgrade
        superset fab create-admin \
          --username $${ADMIN_USERNAME} \
          --firstname $${ADMIN_FIRST_NAME} \
          --lastname $${ADMIN_LAST_NAME} \
          --email $${ADMIN_EMAIL} \
          --password $${ADMIN_PASSWORD} || true
        superset init
        gunicorn -w 2 -k gthread --threads 8 --timeout 300 -b 0.0.0.0:8088 'superset.app:create_app()'

volumes:
  pgdata:
  superset_home:
